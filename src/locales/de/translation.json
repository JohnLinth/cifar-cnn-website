{
  "I can tell if an image is of a...": "Ich kann folgende Objekte erkennen...",
  "title": "CCN - Bildklassifikation",
  "Object Classifier": "Objektklassifikator",
  "✈️ Airplane 🚗 Automobile 🐦 Bird 🐱 Cat 🦌 Deer 🐶 Dog 🐸 Frog 🐴 Horse 🚢 Ship 🚚 Truck": "✈️ Flugzeug 🚗 Automobil 🐦 Vogel 🐱 Katze 🦌 Hirsch 🐶 Hund 🐸 Frosch 🐴 Pferd 🚢 Schiff 🚚 LKW",
  "Click or Drop Image": "Bild hier klicken oder ablegen",
  "Predict!": "Vorhersagen!",
  "This image was predicted to be a...": "Dieses Bild enthält ein...",
  "No prediction yet": "Noch keine Vorhersage",
  "Waiting for prediction...": "Warte auf Vorhersage...",
  "Must select image first!": "Muss zuerst ein Bild auswählen!",
  "HORSE": "PFERD",
  "AIRPLANE": "FLUGZEUG",
  "AUTOMOBILE": "AUTOMOBIL",
  "BIRD": "VOGEL",
  "CAT": "KATZE",
  "DEER": "HIRSCH",
  "DOG": "HUND",
  "FROG": "FROSCH",
  "SHIP": "SCHIFF",
  "TRUCK": "LKW",
  "step_1": "1. Vorverarbeitung",
  "app_description": "Diese App verwendet ein Convolutional Neural Network (CNN), das ich trainiert habe, um Bilder in eine von 10 Klassen zu klassifizieren. Das Modell wurde auf dem CIFAR-10-Datensatz trainiert",
  "dataset_description": ", der aus 60.000 32x32 Farb-Bildern in 10 Klassen besteht, mit 6.000 Bildern pro Klasse. Diese Klassen umfassen Kategorien wie Flugzeuge, Autos, Vögel, Katzen usw.",
  "model_accuracy": "Das Modell kann das Objekt im Bild mit einer Genauigkeit von etwa 72 % vorhersagen. Dies variiert je nach Klarheit des Bildes (Faktoren wie ob das Objekt vollständig im Rahmen ist, seine Ausrichtung oder ob es klar und gut beleuchtet ist, können das Ergebnis beeinflussen).",
  "code_and_dataset_link": "Der Code, den ich verwendet habe, um das Modell zu trainieren und zu verwenden, ist unten verlinkt, ebenso wie der Datensatz, den ich verwendet habe, um es zu trainieren. Schauen Sie es sich gerne an!",
  "How This App Makes Predictions": "Wie diese App Vorhersagen trifft",
  "The Prediction Process (Step-by-Step)": "Der Vorhersageprozess (Schritt für Schritt)",
  "step_1_description": "Zuerst wird das hochgeladene Bild in ein 32x32 Bild mit 3 RGB-Kanälen umgewandelt, um dem Datensatz zu entsprechen, auf dem es trainiert wurde.",
  "example": "Beispiel:",
  "step_2": "2. Merkmalsextraktion",
  "step_2_description": "Der Kern dieses Modells besteht aus sogenannten '2D-Faltungsschichten', die für das Erkennen von Merkmalen wie Kanten, Texturen und anderen strukturellen Mustern im Bild verantwortlich sind. Die tieferen Schichten dieses Netzwerks erkennen komplexere Merkmale wie Formen oder bestimmte Teile eines Objekts.",
  "step_3": "3. Max-Pooling-Schichten",
  "step_3_description": "Zwischen den Faltungsschichten verwendet das Modell Max-Pooling-Schichten. Diese Schichten reduzieren die 'räumlichen Dimensionen', wobei nur die wichtigsten Merkmale beibehalten und weniger nützliche Informationen verworfen werden. Dies macht das Modell effizienter und besser in der Generalisierung.",
  "step_4": "4. Klassifizierung / Vorhersage",
  "step_4_description": "Nach dem Merkmalsextraktionsprozess durchläuft die Datenmenge voll verbundene 'Dichteschichten'. Diese Schichten kombinieren alle extrahierten Merkmale und geben eine endgültige Vorhersage ab. Das Modell ordnet jeder der 10 möglichen Klassen Wahrscheinlichkeiten zu, und die Klasse mit der höchsten Wahrscheinlichkeit wird als das vorhergesagte Objekt ausgewählt.",
  "be patient, sometimes the prediction can take a few seconds...": "bitte geduldig sein, manchmal kann die Vorhersage ein paar Sekunden dauern...",
  "Check out the code": "Schau dir den Code an",
  "sources": "Nützliches Material",
  "No prediction yet.": "Noch keine Vorhersage.",
  "designed and developed by john linthicum © sep. 2024": "Entworfen und entwickelt von John Linthicum © Sep. 2024"
}
